language: c

compiler:
    - gcc

env:                                                
    global:
        - BINTRAY_USER=yokogawa
        - BINTRA_REPO=debian
        - BINTRA_API=https://api.bintray.com

build:                                                  
    pre_ci:                               
        - docker pull yokogawa/build-debian-kernel-package
    pre_ci_boot:
        options: "-v /root/src"
    ci:
        - echo "LATEST=$(curl -sL https://www.kernel.org/finger_banner | awk '/^The latest stable/ {print $11; exit} ')" > env.txt
        - echo "CUSTOM_NAME=aufs" >> env.txt
        - echo "CUSTOM_REVISION=$(./bintray.sh get_revision)" >> env.txt
        - env
        - echo ${PWD}
        - ls -l
        - cat env.txt
        - docker run -t --env-file env.txt --volumes-from ${SHIPPABLE_CONTAINER_NAME} -w ${SHIPPABLE_BUILD_DIR} --entrypoint=${SHIPPABLE_BUILD_DIR}/create-kernel-pkg.sh yokogawa/build-debian-kernel-package setup
        - ls -l
        - docker run -t --env-file env.txt --volumes-from ${SHIPPABLE_CONTAINER_NAME} -w ${SHIPPABLE_BUILD_DIR} --entrypoint=${SHIPPABLE_BUILD_DIR}/create-kernel-pkg.sh yokogawa/build-debian-kernel-package check
        - ls -l
        - docker run -t --env-file env.txt --volumes-from ${SHIPPABLE_CONTAINER_NAME} -w ${SHIPPABLE_BUILD_DIR} --entrypoint=${SHIPPABLE_BUILD_DIR}/create-kernel-pkg.sh yokogawa/build-debian-kernel-package build
        - ls -l
    post_ci:
    on_success:
        - "./bintray.sh deploy"
    on_failure:

#integrations:
# notifications:
#   - integrationName:
#     type:

